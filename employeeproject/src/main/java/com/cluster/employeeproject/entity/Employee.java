package com.cluster.employeeproject.entity;

// Generated Feb 28, 2013 3:50:08 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.sql.Blob;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.cluster.employeeproject.common.entity.BaseDO;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "EMPLOYEE", schema = "employeeproject")
public class Employee extends BaseDO implements java.io.Serializable 
{

	private long employeeId;
	private Status status;
	private Department department;
	private String gender;
	private String firstName;
	private String middleName;
	private String lastName;
	private Date dob;
	private byte[] image;
	private String emailId;
	private String alternateEmailId;
	private Set<EmployeeRole> employeeRoles = new HashSet<EmployeeRole>(0);
	private Set<Login> logins = new HashSet<Login>(0);
	private Set<EmployeeAddress> employeeAddresses = new HashSet<EmployeeAddress>(
			0);
	private Set<EmployeePhone> employeePhones = new HashSet<EmployeePhone>(0);

	public Employee() {
	}

	public Employee(long employeeId) {
		this.employeeId = employeeId;
	}

	public Employee(long employeeId, Status status,
			Department department, String gender, String firstName,
			String middleName, String lastName, Date dob, byte[] image,
			String emailId, String alternateEmailId,
			Set<EmployeeRole> employeeRoles, Set<Login> logins,
			Set<EmployeeAddress> employeeAddresses,
			Set<EmployeePhone> employeePhones) {
		this.employeeId = employeeId;
		this.status = status;
		this.department = department;
		this.gender = gender;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.dob = dob;
		this.image = image;
		this.emailId = emailId;
		this.alternateEmailId = alternateEmailId;
		this.employeeRoles = employeeRoles;
		this.logins = logins;
		this.employeeAddresses = employeeAddresses;
		this.employeePhones = employeePhones;
	}

	@Id
	@Column(name = "EMPLOYEE_ID")
	/*@SequenceGenerator(name="employee", sequenceName="EMPLOYEE_SEQ")
	@GeneratedValue(generator="employee")*/
	@GeneratedValue(strategy=GenerationType.AUTO)
	public long getEmployeeId() {
		return this.employeeId;
	}

	public void setEmployeeId(long employeeId) {
		this.employeeId = employeeId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "STATUS_ID")
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "DEPARTMENT_ID")
	public Department getDepartment() {
		return this.department;
	}

	public void setDepartment(Department department) {
		this.department = department;
	}

	@Column(name = "GENDER", length = 50)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "FIRST_NAME", length = 50)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "MIDDLE_NAME", length = 50)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "LAST_NAME", length = 50)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DOB", length = 7)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "IMAGE")
	public byte[] getImage() {
		return this.image;
	}

	public void setImage(byte[] image) 
	{
		this.image = image;
		
	}

	@Column(name = "EMAIL_ID", length = 200)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "ALTERNATE_EMAIL_ID", length = 200)
	public String getAlternateEmailId() {
		return this.alternateEmailId;
	}

	public void setAlternateEmailId(String alternateEmailId) {
		this.alternateEmailId = alternateEmailId;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employee",cascade=CascadeType.ALL)
	public Set<EmployeeRole> getEmployeeRoles() {
		return this.employeeRoles;
	}

	public void setEmployeeRoles(Set<EmployeeRole> employeeRoles) {
		this.employeeRoles = employeeRoles;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employee",cascade=CascadeType.ALL)
	public Set<Login> getLogins() {
		return this.logins;
	}

	public void setLogins(Set<Login> logins) {
		this.logins = logins;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employee",cascade=CascadeType.ALL)
	public Set<EmployeeAddress> getEmployeeAddresses() {
		return this.employeeAddresses;
	}

	public void setEmployeeAddresses(Set<EmployeeAddress> employeeAddresses) {
		this.employeeAddresses = employeeAddresses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employee",cascade=CascadeType.ALL)
	public Set<EmployeePhone> getEmployeePhones() {
		return this.employeePhones;
	}

	public void setEmployeePhones(Set<EmployeePhone> employeePhones) {
		this.employeePhones = employeePhones;
	}

}
