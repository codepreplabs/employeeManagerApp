package com.cluster.employeeproject.entity;

// Generated Feb 28, 2013 3:50:08 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import com.cluster.employeeproject.common.entity.BaseDO;

/**
 * City generated by hbm2java
 */
@Entity
@Table(name = "CITY", schema = "employeeproject")
public class City extends BaseDO implements java.io.Serializable {

	private long cityId;
	private State state;
	private String cityName;
	private Set<EmployeeAddress> employeeAddresses = new HashSet<EmployeeAddress>(
			0);

	public City() {
	}

	public City(long cityId) {
		this.cityId = cityId;
	}

	public City(long cityId, State state, String cityName,
			Set<EmployeeAddress> employeeAddresses) {
		this.cityId = cityId;
		this.state = state;
		this.cityName = cityName;
		this.employeeAddresses = employeeAddresses;
	}

	@Id
	@Column(name = "CITY_ID", unique = true, nullable = false, precision = 22, scale = 0)
	/*@GeneratedValue(generator="hibernate")
	@SequenceGenerator(name="hibernate",sequenceName="CITY_SEQ")*/
	@GeneratedValue(strategy=GenerationType.AUTO)
	public long getCityId() {
		return this.cityId;
	}

	public void setCityId(long cityId) {
		this.cityId = cityId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STATE_ID")
	public State getState() {
		return this.state;
	}

	public void setState(State state) {
		this.state = state;
	}

	@Column(name = "CITY_NAME", length = 50)
	public String getCityName() {
		return this.cityName;
	}

	public void setCityName(String cityName) {
		this.cityName = cityName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "city",cascade=CascadeType.ALL)
	public Set<EmployeeAddress> getEmployeeAddresses() {
		return this.employeeAddresses;
	}

	public void setEmployeeAddresses(Set<EmployeeAddress> employeeAddresses) {
		this.employeeAddresses = employeeAddresses;
	}

}
